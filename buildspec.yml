version: 0.2
env:
  exported-variables:
    - STAGE
        
phases:
  install:
    runtime-versions:
      nodejs: 12
    commands:
      - 'wget -O /usr/local/bin/tfenv https://github.com/cloudposse/tfenv/releases/download/0.4.0/tfenv_linux_amd64'
      - 'chmod +x /usr/local/bin/tfenv'
      - 'curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -'
      - 'apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"'
      - 'chmod a+rx utils -R'
      - 'apt-get -y update && apt-get install zip terraform -y'
      - 'npm install -g yarn json dotenv-cli'
      - 'STAGE=$(utils/branch-to-stage.sh config.json)'
      - 'echo $STAGE'
      - 'aws s3 cp s3://meandering-rocks-configuration/env/.env.$STAGE .env.$STAGE'
      - 'yarn install'
  pre_build:
    commands:
      - 'yarn run test:since-$(git branch --show-current)'

  build:
    commands:
      - 'yarn run build'
      - 'echo "Running terraform plan for common environment resources."'
      - 'dotenv -e .env.$STAGE -- tfenv terraform -chdir=tf/common plan -out=.tfplan-common'
      - 'echo "Running terraform plan for $STAGE environment resources."'
      - 'dotenv -e .env.$STAGE -- tfenv terraform  -chdir=tf/$STAGE plan -out=.tfplan-$STAGE'

  post_build:
    commands:
      - 'echo "Running terraform apply for common environment resources."'
      - 'dotenv -e .env.$STAGE -- tfenv terraform -chdir=tf/common apply .tfplan-common'
      - 'terraform -chdir=tf/common output -json > tf/common/.tfoutput.json'
      - 'echo "Running terraform apply for $STAGE environment resources."'
      - 'dotenv -e .env.$STAGE -- tfenv terraform -chdir=tf/$STAGE apply .tfplan-$STAGE'
      - 'terraform -chdir=tf/$STAGE output -json > tf/$STAGE/.tfoutput.json'
      - 'yarn run deploy:since-$(git branch --show-current)'
      - 'echo "TBD: Tag and release a new version if its on review branch"'
      - 'echo "TBD: Save some artifacts or something"'

cache:
  paths:
    - /usr/local/lib
    - /usr/bin