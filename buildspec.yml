version: 0.2
env:
  variables:
    PATH: "$PATH:$HOME/bin"

phases:
  install:
    runtime-versions:
      nodejs: 12
    commands:
      - 'chmod +x utils -R'
      - 'export STAGE=$(utils/branch-to-stage.sh config.json)'
      - 'apt-get -y update && apt-get install zip -y'
      - 'npm install -g yarn gatsby serverless json dotenv-cli'
      - 'sudo wget https://github.com/cloudposse/tfenv/releases/download/0.4.0/tfenv_linux_amd64 > $HOME/bin/tfenv && chmod +x $HOME/bin/tfenv'
      - 'aws s3 cp s3://meandering-rocks-configuration/env/.env.$STAGE .env.$STAGE'
      - 'yarn install'

  pre_build:
    commands:
      - 'yarn run test'

  build:
    commands:
      - 'yarn run build'
      - 'echo "Running terraform plan for common environment resources." \
            && cd tf/common && dotenv -e ../../.env.$STAGE tfenv terraform plan -out=tfplan-common \
            $$ cd ../..'
      - 'echo "Running terraform plan for $STAGE environment resources." \
            && cd tf/$STAGE && dotenv -e ../.env.$STAGE tfenv terraform plan -out=tfplan-$STAGE \
            $$ cd ../..'

  post_build:
    commands:
      - 'echo "Running terraform apply for common environment resources." \
            && cd tf/common && dotenv -e ../../.env.$STAGE tfenv terraform apply tfplan-common -auto-approve'
      - 'terraform output -json > output.json $$ cd ../..'
      - 'echo "Running terraform apply for $STAGE environment resources." \
            && cd tf/$STAGE && dotenv -e ../../.env.$STAGE tfenv terraform apply tfplan-$STAGE -auto-approve'
      - 'terraform output -json > output.json $$ cd ../..'
      - 'yarn run deploy'
      - 'echo "TBD: Tag and release a new version if its on review branch"'
      - 'echo "TBD: Save some artifacts or something"'
cache:
  paths:
    - 'web/.cache/*'
    - 'web/public/*'
    - 'api/services/newsletter/.webpack/*'
    - 'api/services/photos/.webpack/*'
